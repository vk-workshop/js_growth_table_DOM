{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCEA,I,EAAM,E,A,S,C,E,G,M,O,C,G,O,E,E,E,EAAmB,SAAS,gBAAgB,CAAC,Q,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,IAC7C,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAY,SAAS,aAAa,CAAC,eACnC,EAAY,SAAS,aAAa,CAAC,eACnC,EAAe,SAAS,aAAa,CAAC,kBACtC,EAAe,SAAS,aAAa,CAAC,kBAE5C,SAAS,IACP,EAAU,QAAQ,CAAG,EAAa,MAAM,EAAI,GAC5C,EAAU,QAAQ,CAAG,EAAa,MAAM,EAAI,EAC5C,EAAa,QAAQ,CAAG,EAAa,IAAI,CAAC,SAAC,CAA3C,EAAkD,OAAA,EAAG,QAAQ,CAAC,MAAM,EAAI,E,GACxE,EAAa,QAAQ,CAAG,EAAa,KAAK,CAAC,SAAC,CAA5C,EAAmD,OAAA,EAAG,QAAQ,CAAC,MAAM,EAAI,C,EAC3E,CAEA,EAAU,gBAAgB,CAAC,QAAS,WAClC,IAAM,EAAM,CAAY,CAAC,EAAE,CAAC,SAAS,CAAC,CAAA,EAElC,CAAA,EAAa,MAAM,CAAG,KACxB,EAAM,MAAM,CAAC,GACb,EAAa,IAAI,CAAC,IAGpB,GACF,GAEA,EAAU,gBAAgB,CAAC,QAAS,WAC9B,EAAa,MAAM,CAAG,GAGxB,AAFgB,EAAa,GAAG,GAExB,MAAM,GAGhB,GACF,GAEA,EAAa,gBAAgB,CAAC,QAAS,WACrC,EAAa,OAAO,CAAC,SAAC,CAAtB,EACE,IAAM,EAAK,SAAS,aAAa,CAAC,KAE9B,CAAA,EAAG,QAAQ,CAAC,MAAM,CAAG,IACvB,EAAG,MAAM,CAAC,EAEd,GAEA,GACF,GAEA,EAAa,gBAAgB,CAAC,QAAS,WACrC,EAAa,OAAO,CAAC,SAAC,CAAtB,EACE,IAAM,EAAS,EAAG,gBAAgB,AAE9B,CAAA,EAAG,QAAQ,CAAC,MAAM,CAAG,GACvB,EAAO,MAAM,EAEjB,GAEA,GACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar trCollection = _to_consumable_array(document.querySelectorAll(\"tr\"));\nvar table = document.querySelector(\"tbody\");\nvar appendRow = document.querySelector(\".append-row\");\nvar removeRow = document.querySelector(\".remove-row\");\nvar appendColumn = document.querySelector(\".append-column\");\nvar removeColumn = document.querySelector(\".remove-column\");\nfunction updateButtonStates() {\n    appendRow.disabled = trCollection.length >= 10;\n    removeRow.disabled = trCollection.length <= 2;\n    appendColumn.disabled = trCollection.some(function(tr) {\n        return tr.children.length >= 10;\n    });\n    removeColumn.disabled = trCollection.every(function(tr) {\n        return tr.children.length <= 2;\n    });\n}\nappendRow.addEventListener(\"click\", function() {\n    var row = trCollection[0].cloneNode(true);\n    if (trCollection.length < 10) {\n        table.append(row);\n        trCollection.push(row);\n    }\n    updateButtonStates();\n});\nremoveRow.addEventListener(\"click\", function() {\n    if (trCollection.length > 2) {\n        var lastRow = trCollection.pop();\n        lastRow.remove();\n    }\n    updateButtonStates();\n});\nappendColumn.addEventListener(\"click\", function() {\n    trCollection.forEach(function(tr) {\n        var td = document.createElement(\"td\");\n        if (tr.children.length < 10) tr.append(td);\n    });\n    updateButtonStates();\n});\nremoveColumn.addEventListener(\"click\", function() {\n    trCollection.forEach(function(tr) {\n        var lastTd = tr.lastElementChild;\n        if (tr.children.length > 2) lastTd.remove();\n    });\n    updateButtonStates();\n});\n\n//# sourceMappingURL=index.9ce9c5ec.js.map\n","'use strict';\n\nconst trCollection = [...document.querySelectorAll('tr')];\nconst table = document.querySelector('tbody');\nconst appendRow = document.querySelector('.append-row');\nconst removeRow = document.querySelector('.remove-row');\nconst appendColumn = document.querySelector('.append-column');\nconst removeColumn = document.querySelector('.remove-column');\n\nfunction updateButtonStates() {\n  appendRow.disabled = trCollection.length >= 10;\n  removeRow.disabled = trCollection.length <= 2;\n  appendColumn.disabled = trCollection.some((tr) => tr.children.length >= 10);\n  removeColumn.disabled = trCollection.every((tr) => tr.children.length <= 2);\n}\n\nappendRow.addEventListener('click', () => {\n  const row = trCollection[0].cloneNode(true);\n\n  if (trCollection.length < 10) {\n    table.append(row);\n    trCollection.push(row);\n  }\n\n  updateButtonStates();\n});\n\nremoveRow.addEventListener('click', () => {\n  if (trCollection.length > 2) {\n    const lastRow = trCollection.pop();\n\n    lastRow.remove();\n  }\n\n  updateButtonStates();\n});\n\nappendColumn.addEventListener('click', () => {\n  trCollection.forEach((tr) => {\n    const td = document.createElement('td');\n\n    if (tr.children.length < 10) {\n      tr.append(td);\n    }\n  });\n\n  updateButtonStates();\n});\n\nremoveColumn.addEventListener('click', () => {\n  trCollection.forEach((tr) => {\n    const lastTd = tr.lastElementChild;\n\n    if (tr.children.length > 2) {\n      lastTd.remove();\n    }\n  });\n\n  updateButtonStates();\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","trCollection","_array_without_holes","isArray","document","querySelectorAll","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","table","querySelector","appendRow","removeRow","appendColumn","removeColumn","updateButtonStates","disabled","some","tr","children","every","addEventListener","row","cloneNode","append","push","lastRow","pop","remove","forEach","td","createElement","lastTd","lastElementChild"],"version":3,"file":"index.9ce9c5ec.js.map"}